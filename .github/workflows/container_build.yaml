name: ExamplePipeline

on:
  workflow_dispatch:
    inputs:
      IMAGE_PREFIX:
        description: 'Container Image Prefix'
        required: true
        default: 'vulnerable'

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64]
    name: "Build and Deploy Container to Kubernetes"
    permissions:
      actions: read
      contents: read
      packages: write

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN  }}

      - name: Build the image
        run: docker build -t ${{ github.event.inputs.IMAGE_PREFIX }}-${{ github.repository_id }}:${{ github.sha }} code/

      # Optional: Run Snyk to check Docker image for vulnerabilities
      # - name: Run Snyk to check Docker image for vulnerabilities
      #   uses: snyk/actions/docker@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     image: ${{ github.event.inputs.IMAGE_PREFIX }}-${{ github.repository_id }}:${{ github.sha }}

      - name: Push image to GitHub Container Registry
        if: always()  # Run independently of prior checks
        id: push-image-ghcr
        env:
          IMAGE_REGISTRY: "ghcr.io"
          IMAGE_REPOSITORY: ${{ github.actor }}
          IMAGE_NAME: "${{ github.event.inputs.IMAGE_PREFIX }}-${{ github.repository_id }}"
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Lowercase repository
          export IMAGE_REPOSITORY=${IMAGE_REPOSITORY,,}

          # Tag the image and push to GitHub Container Registry
          docker tag ${{ github.event.inputs.IMAGE_PREFIX }}-${{ github.repository_id }}:${{ github.sha }} $IMAGE_REGISTRY/$IMAGE_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG

          echo '### Job Summary' >> $GITHUB_STEP_SUMMARY
          echo 'Build finished  ' >> $GITHUB_STEP_SUMMARY
          echo '- Image Available in GitHub Packages: *${{ github.event.inputs.IMAGE_PREFIX }}-${{ github.repository_id }}:${{ github.sha }}*' >> $GITHUB_STEP_SUMMARY
          echo '- Execute Container Image Locally: `docker run -p 8080:8080 $IMAGE_REGISTRY/$IMAGE_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG`' >> $GITHUB_STEP_SUMMARY
          echo '- Local reproducibility can be achieved with: `docker build -t imagename:test -f Dockerfile_staged`' >> $GITHUB_STEP_SUMMARY

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          kubectl-version: 'latest'

      - name: Set kubeconfig from secret
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
          
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/my-app my-app=${{ github.actor }}/vulnerable-${{ github.repository_id }}:${{ github.sha }} -n default
          kubectl rollout status deployment/my-app -n default
